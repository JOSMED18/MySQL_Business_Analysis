-- PRODUCT SUMMARY
CREATE VIEW v_products_summary AS
SELECT 
        c.SHORT_DESCR AS CATEGORY_NAME,
        p.CURRENCY AS CURRENCY,
        SUM(p.NET_AMOUNT) AS NET_AMOUNT,
        SUM(p.TAX_PAYED) AS TAX_PAYED,
        SUM(p.QUANTITY) AS QUANTITY,
        SUM(p.TOTAL_WEIGHT) AS TOTAL_WEIGHT
FROM
	(v_products_summary p
	JOIN productcategorytext c ON ((LEFT(p.PRODUCTID, 2) = c.PRODCATEGORYID)))
GROUP BY c.SHORT_DESCR
ORDER BY NET_AMOUNT DESC;


-- CATEGORY SUMMARY
CREATE VIEW v_categories_summary AS
SELECT 
        PRODCATEGORYID,
        c.SHORT_DESCR AS CATEGORY_NAME,
        p.CURRENCY AS CURRENCY,
        SUM(p.NET_AMOUNT) AS NET_AMOUNT,
        SUM(p.TAX_PAYED) AS TAX_PAYED,
        SUM(p.QUANTITY) AS QUANTITY,
        SUM(p.TOTAL_WEIGHT) AS TOTAL_WEIGHT
FROM
	(v_products_summary p
	JOIN productcategorytext c ON ((LEFT(p.PRODUCTID, 2) = c.PRODCATEGORYID)))
GROUP BY c.SHORT_DESCR
ORDER BY NET_AMOUNT DESC;



-- EMPLOYEE SUMMARY ANALYSIS
CREATE VIEW v_employees_summary AS
SELECT 
	e.EMPLOYEEID AS ID,
    e.NAME_FIRST AS FIRST_NAME,
    e.NAME_LAST AS LAST_NAME,
    e.EMAILADDRESS as EMAIL,
    CASE
    WHEN e.SEX = "M" THEN "Man"
    ELSE "Woman"
    END AS Gender,
    SUM(s.NETAMOUNT) AS NET_AMOUNT
FROM salesorders s
LEFT JOIN employees e
ON s.CREATEDBY = e.EMPLOYEEID
group by EMPLOYEEID, NAME_FIRST
ORDER BY NETAMOUNT DESC;

-- LEAD TIME TO DELIVER AND EMPLOYEE IN CHARGE OF THE ORDER
	-- DATE DELIVERED - DATE CREATED IS CONSIDERED LEAD TIME FOR THIS DATA
ALTER VIEW v_lead_time_summary AS
SELECT  
	sales.SALESORDERID,
    sales.DELIVERYDATE,
	CAST(so.CREATEDAT AS DATE) AS CREATIONDATE,
    datediff(sales.DELIVERYDATE, CAST(so.CREATEDAT AS DATE)) AS LEADTIME,
    CONCAT(e.NAME_FIRST, " ", e.NAME_LAST) AS FULLNAME,
    so.PARTNERID,
    sales.PRODUCTID,
    sales.NETAMOUNT,
    sales.TAXAMOUNT
    
FROM (SELECT 	
	SALESORDERID,
    CAST(DELIVERYDATE AS DATE) AS DELIVERYDATE,
    NETAMOUNT,
    TAXAMOUNT,
    GROSSAMOUNT,
    PRODUCTID
	FROM salesorderitems) AS sales
    
    JOIN salesorders so
    ON sales.SALESORDERID = so.SALESORDERID
    JOIN employees e
    ON so.CREATEDBY = e.EMPLOYEEID
    HAVING LEADTIME > 0 AND LEADTIME<1000;
    

-- PARTNERS NETAMOUNT SOLD ANALYSIS
CREATE VIEW v_partner_analysis AS
SELECT 
	so.PARTNERID,
    
    CASE 
    WHEN isnull(b.COMPANYNAME)  THEN "Company Not Registered"
    ELSE b.COMPANYNAME
    END AS COMPANYNAME,
    
    CASE 
    WHEN isnull(b.EMAILADDRESS) THEN "Email Not Registed"
    ELSE b.EMAILADDRESS
    END AS EMAILADDRESS,
    SUM(NETAMOUNT) AS NETAMOUNT,
    SUM(TAXAMOUNT) AS TAXAMOUNT
FROM salesorders so
LEFT JOIN businesspartners b
ON so.PARTNERID = b.PARTNERID
GROUP BY so.PARTNERID
ORDER BY b.COMPANYNAME DESC;
